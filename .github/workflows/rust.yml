name: Rust

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop", "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Embed app's client id
      run: find src/ -name 'auth.rs' -type f -exec sed -i ''s/#{CLIENTID}#/${{ secrets.CLIENTID }}/g'' {} \;
    - name: Build
      run: cargo build --verbose
    - name: Install required cargo
      run: cargo install clippy-sarif sarif-fmt
    - name: Run tests
      run: cargo clippy --verbose --all-features --message-format=json | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
      continue-on-error: true

    - name: Upload analysis results to GitHub
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: rust-clippy-results.sarif
        wait-for-processing: true

  nix_functional_test:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]
        rust: [stable]
    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v2
    - name: Embed app's client id
      run: find src/ -name 'auth.rs' -type f -exec sed -i ''s/#{CLIENTID}#/${{ secrets.CLIENTID }}/g'' {} \;
    - name: cargo test
      run: cargo test --verbose
    - uses: actions/upload-artifact@v3
      with:
        name: tdi 
        path: target/debug/tdi

  win_functional_test:
    strategy:
      matrix:
        platform: [windows-latest]
        rust: [stable]
    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v2
    - name: Embed app's client id
      run: powershell -Command "(gc src\auth.rs) -replace 'CLIENTID', '${{ secrets.CLIENTID }}' | Out-File -encoding ASCII src\auth.rs"
    - name: cargo test
      run: cargo test --verbose
    - uses: actions/upload-artifact@v3
      with:
        name: tdi.exe 
        path: target\debug\tdi.exe